' Gambas class file

'Property Read {Error} As Boolean

Static Private $aLang As String[] = ["en", "fr", "de", "es", "it", "nl", "pl", "pt", "pt_BR", "mk", "sq", "ca", "hu", "tr", "ar", "fa", "vi", "ko", "ja", "ru", "zh", "zh_TW", "eo"]

'Private $bError As Boolean
'Private $bPrint As Boolean
Private mnuLang As Menu
Private $bFirstTime As Boolean
Private $bOffline As Boolean
Private $hTask As CHelpSearchTask
Private $aSearch As String[]

Public Sub _new()
  
  Dim sLang As String
  Dim hMenu As Menu
  Dim aLangName As New String[]
  Dim aLang As String[]
  
  Me.Utility = Settings["/UseUtilityWindows", 1]
  
  mnuLang = New Menu(Me) As "mnuLang"
  
  hMenu = New Menu(mnuLang) As "mnuSelectLanguage"
  hMenu.Text = ("Default language")
  
  For Each sLang In $aLang
    aLangName.Add(MyLanguage.ToName(sLang) & ":" & sLang)
  Next
  aLangName.Sort(gb.Language)
  
  For Each sLang In aLangName
    aLang = Split(sLang, ":")
    hMenu = New Menu(mnuLang) As "mnuSelectLanguage"
    hMenu.Text = aLang[0]
    hMenu.Tag = aLang[1]
  Next
  
  btnHome.Menu = "mnuLang"
  
  '$hHistory = New CHistory As "History"
  
End

Public Sub GetBrowser() As HelpView
  
  Return webHelp
  
End


Public Sub ReadConfig()
  
  If webHelp.ReadConfig() Then GotoHome
  
  $bOffLine = Settings["/UseOfflineHelp"]

  tabClass.TextFont = Project.GetSmallFont()
  panToolbar.Font = tabClass.TextFont
  panToolbar.H = tabClass.TabBarSize
  
  If $bOffLine Then
    tabClass[1].Visible = True
  Else
    tabClass.Index = 0
    tabClass[1].Visible = False
  Endif
  
End


Public Sub Form_Open()
  
  Dim sLang As String
  
  Settings.Read(Me)
  Settings.Read(sdpHelp)
  
  ReadConfig
  
  sLang = MHelp.GetLanguage(True)
  If sLang Then
    btnHome.Text = MyLanguage.ToName(sLang)
  Else
    btnHome.Text = ("Default language")
  Endif
  
  'If Not webHelp.Url Then 
  '  webHelp.Url = MHelp.GetURL() & "?help&" & MHelp.GetLanguage() & "&v3"
  '  webHelp.TextZoom = 0.8
  'Endif
  
  MHelp.LoadProxyConfig
  
  If Not $bFirstTime Then
    $bFirstTime = True
    OnProjectChange
  Endif
  
End

Public Sub Form_Close()
  
  Settings.Write(Me)
  Settings.Write(sdpHelp)
  Settings["/FHelpBrowser/ShowPanel"] = btnShowPanel.Value
  
End

Private Function GetHomeURL() As String

  'Debug MHelp.GetURL() & "?help&" & MHelp.GetLanguage() & "&v3"
  Return MHelp.GetURL() & "?nl&l=" & MHelp.GetLanguage()

End

Public Sub GotoURL(sUrl As String)
  
  webHelp.Url = sUrl
  '$hHistory.Add(sUrl)
  
End

Public Sub GotoHome()
  
  GotoURL(GetHomeURL())
  
End


Public Sub btnHome_Click()
  
  GotoHome()
  
End

Public Sub btnBack_Click()
  
  webHelp.Back
  
End

Public Sub btnForward_Click()
  
  webHelp.Forward
  
End

Public Sub btnStop_Click()
  
  webHelp.Stop
  
End

Public Sub btnReload_Click()
  
  webHelp.Reload
  
End

Public Sub btnZoomIn_Click()
  
  webHelp.ZoomIn
  
End

Public Sub btnZoomOut_Click()
  
  webHelp.ZoomOut
  
End

Public Sub btnZoomNormal_Click()
  
  webHelp.ZoomNormal
  
End

Public Sub Form_Resize()
  
  Dim bVisible As Boolean = Me.Height > Desktop.Scale * 30 And Me.Width > Desktop.Scale * 30

  panToolbar.Visible = bVisible
  'sepToolbar.Visible = bVisible
  
End

Public Sub btnWebSite_Click()
  
  GotoURL("http://gambas.sourceforge.net")
  
End

' Private Function Error_Read() As Boolean
'   
'   Return $bError
'   
' End

' Public Sub btnModify_Click()
'   
'   Dim sUrl As String
'   
'   sUrl = webHelp.Url
'   If Not (sUrl Begins Project.WIKI_URL) Then Return
'   
'   'sUrl = Replace(sUrl, "http://gambasdoc.org/help", "http://gambasdoc.org/edit")
'   
'   Project.OpenWebPage(sUrl)
'   
' End

Public Sub btnShowPanel_Click()
  
  sdpHelp.Hidden = False
  btnShowPanel.Hide

End

''Fill the TreeView with Project components and classes

Private Sub FillTree()

  Dim hClass As CClassInfo
  Dim aComp As New String[]
  Dim aClass As New CClassInfo[]
  Dim sComponent As String
  Dim sClass As String
  
  tvwClasses.Clear
  
  If Project.Path Then
  
    tvwClasses.Add("$", Project.Name, Project.GetIcon(Project.Dir, 16))
    For Each sClass In Project.GetClasses()
      
      tvwClasses.Add("$" &/ sClass, sClass,, "$")
      
    Next
    tvwClasses["$"].Expanded = True
    
  Endif
  
  For Each hClass In Project.Documentation.Classes
    If hClass.Component = Null Then 
      sComponent = "gb"
    Else 
      sComponent = hClass.Component
    Endif
    If sComponent = "$" Then Continue
    If Not aComp.Exist(sComponent) Then aComp.Add(sComponent)
    aClass.Add(hClass)
  Next
  
  aComp.Sort()
  aClass.Sort()
  
  For Each sComponent In aComp
    tvwClasses.Add(sComponent, sComponent, Picture["icon:/tiny/component"])
  Next
  
  For Each hClass In aClass
    
    If hClass.Name = "." Then Continue
    If InStr(hClass.Name, "*") Then Continue
    
    If hClass.Component = Null Then 
      sComponent = "gb"
    Else 
      sComponent = hClass.Component
    Endif
    sClass = hClass.Name
    
    Try tvwClasses.Add(sComponent &/ sClass, sClass,, sComponent)
    
  Next
  
End

Public Sub tvwClasses_Select()
  
  Dim aKey As String[]
  Dim sKey As String

  lstResult.UnSelectAll
  sKey = tvwClasses.Current.Key
  If Not sKey Or If sKey = "$" Then Return
  
  aKey = Split(sKey, "/")
  If aKey.Count = 2 Then
    MHelp.InitWebViewWith(webHelp, MHelp.TYPE_CLASS, aKey[0] &/ aKey[1])
  Else If aKey.Count = 1 Then
    MHelp.InitWebViewWith(webHelp, MHelp.TYPE_COMPONENT, aKey[0])
  Endif
  
End

Public Sub btnPrint_Click()
  
  ' Printer1.OutputFile = "~/print.pdf"
  ' $bPrint = False
  ' If Printer1.Configure() Then Return
  ' webHelp.Current.Print(Printer1)
  
  webHelp.ExecJavascript("window.print();")
  
End

Public Sub Form_KeyPress()
  
  If Key.Code = Key.Escape Then Me.Close
  
End

Private Sub SetLang(Optional sLang As String)
  
  Dim sUrl As String
  
  MHelp.SetLanguage(sLang)
  sLang = MHelp.GetLanguage()
  
  sUrl = webHelp.Url
  If sUrl Begins Project.WIKI_URL Then
    sUrl = URL.SetQuery(sUrl, "l", sLang)
    GotoURL(sUrl)
  Else If sUrl Begins "file:///" &/ MHelp.GetOfflineDir() Then
    GotoURL(Project.WIKI_ROOT &/ Wiki.Path & "?l=" & sLang)
  Endif
  
End

Public Sub mnuSelectLanguage_Click()
  
  SetLang(Last.Tag)
  btnHome.Text = Last.Text
  
End

Public Sub OnProjectChange()
  
  MHelp.Clear
  If Me.Closed Then Return
  
  If Not sdpHelp.Hidden Then FillTree
  
  If webHelp.Url <> GetHomeURL() Then
    btnHome_Click
  Endif
  
End


Public Sub tabClass_Click()

  If tabClass.Index = 1 Then txtSearch.SetFocus

End

Public Sub btnSearch_Click()

  Dim sText As String
  
  If $hTask Then
    $hTask.Stop 
  Else
    sText = Trim(txtSearch.Text)
    If sText Then
      $hTask = New CHelpSearchTask As "TaskSearch"
      $aSearch = Split(sText, " ", Chr$(34), True)
      $hTask.Search = $aSearch
      btnSearch.Picture = Picture["icon:/small/stop"]
      txtSearch.Enabled = False
      lstResult.Clear
      spnSearch.Show
      spnSearch.Raise
      spnSearch.Start
    Endif
  Endif

End

Public Sub txtSearch_Activate()

  btnSearch.Value = True

End

Public Sub TaskSearch_Read(Data As String)

  Dim sLine As String
  Dim iPos As Integer
  Dim sTitle As String

  Data = $hTask.Buffer & Data
  iPos = RInStr(Data, "\n")
  If iPos = 0 Then
    $hTask.Buffer = Data
    Return
  Endif
  
  $hTask.Buffer = Mid$(Data, iPos + 1)

  Inc Project.NoWait  
  For Each sLine In Split(Left(Data, iPos - 1), "\n")
    If lstResult.Exist(sLine) Then Continue
    sTitle = Wiki.GetPageTitle(sLine)
    If sTitle Then 
      lstResult.Add(sLine, sTitle)
    Else 
      lstResult.Add(sLine, sLine).Foreground = Color.LightForeground
    Endif
  Next
  Dec Project.NoWait  
  
End

Public Sub TaskSearch_Kill()
  
  $hTask = Null
  btnSearch.Picture = Picture["icon:/small/find"]
  txtSearch.Enabled = True
  spnSearch.Hide
  
End


Public Sub lstResult_Select()

  tvwClasses.UnSelectAll
  MHelp.MakeOffline(webHelp, MHelp.GetURL(lstResult.Key),, $aSearch.Join())

End

Public Sub tabClass_Arrange()

  spnSearch.Move(lstResult.X + (lstResult.W - spnSearch.W) \ 2, lstResult.Y + (lstResult.H - spnSearch.H) \ 2)

End

Public Sub tabClass_CloseAll()

  sdpHelp.Hidden = True

End

Public Sub sdpHelp_Hide()

  btnShowPanel.Show

End

Public Sub sdpHelp_Show()

  btnShowPanel.Hide
  FillTree

End
