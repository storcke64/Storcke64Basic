' Gambas class file

' Gambas module file

'Public Const MODE_GAMBAS As Integer = 0
'Public Const MODE_HTML As Integer = 1
'Public Const MODE_C As Integer = 2

Private $hModule As Object
Private $hMenu As Menu
Private $hObs As Observer

Private $sPattern As String
Private $aPattern As String[]
'Private $aPatternAlpha As String[]
Private $aPatternSearch As String[]

Static Public Sub FormatColor(iColor As Integer, sFormat As String) As String

  Dim I As Integer
  Dim sCar As String
  Dim sType As String
  Dim sResult As String
  Dim iVal As Integer
  
  For I = 1 To Len(sFormat)
    sCar = Mid$(sFormat, I, 1)
    If InStr("RGBA", sCar) Then
      sType = Mid$(sFormat, I + 1, 1)
      Select Case sCar
        Case "R"
          iVal = Color[iColor].Red
        Case "G"
          iVal = Color[iColor].Green
        Case "B"
          iVal = Color[iColor].Blue
        Case "A"
          iVal = Color[iColor].Alpha Xor 255
      End Select
      Select Case sType
        Case "x"
          sCar = Hex$(iVal, 2)
        Case "i"
          sCar = CStr(iVal)
        Case "f"
          sCar = Format(iVal / 255, "0.###")
      End Select
      Inc I
    Endif
    sResult &= sCar
  Next
  
  Return sResult
  
End

Static Private Sub GetColorFromString(sRgb As String) As Integer
  
  Dim aScan As String[]
  
  If sRgb Begins "rgba(" Then
    aScan = Scan(sRgb, "rgba(*,*,*,*)")
    Return Color.RGB(CInt(aScan[0]), CInt(aScan[1]), CInt(aScan[2]), CInt(255 * CFloat(aScan[3])) Xor 255)
  Else If sRgb Begins "rgb(" Then
    aScan = Scan(sRgb, "rgb(*,*,*)")
    Return Color.RGB(CInt(aScan[0]), CInt(aScan[1]), CInt(aScan[2]))
  Else If sRgb Begins "&H" Then
    Return Val("&H" & Mid$(sRgb, 3, 6))
  Else If sRgb Begins "&" Then
    Return Val("&H" & Mid$(sRgb, 2, 6))
  Else If sRgb Begins "#" Then
    If Len(sRgb) = 4 Then
      Return Val("&H" & Mid$(sRgb, 2, 1) & Mid$(sRgb, 2, 1) & Mid$(sRgb, 2, 2) & Mid$(sRgb, 2, 2) & Mid$(sRgb, 2, 3) & Mid$(sRgb, 2, 3))
    Else If Len(sRgb) = 7 Then
      Return Val("&H" & Mid$(sRgb, 2, 6))
    Endif
  Endif
  
Catch
  
End

Public Sub _new(hModule As Object, hMenuButton As MenuButton)
  
  Dim hMenu As Menu
  
  $hModule = hModule
  
  Select Case GetEditor().Mode
    Case "gambas"
      $aPattern = ["&HRxGxBx", "#RxGxBx", "&RxGxBx"]
      $aPatternSearch = ["&H", "#", "&"]
    Case "css", "html"
      $aPattern = ["#RxGxBx", "rgb(Ri,Gi,Bi)"]
      $aPatternSearch = ["#", "rgb(", "rgba("]
    Case "webpage"
      $aPattern = ["&HRxGxBx", "#RxGxBx", "&RxGxBx", "rgb(Ri,Gi,Bi)"]
      $aPatternSearch = ["&H", "#", "&", "rgb(", "rgba("]
    Case Else
      $aPattern = ["#RxGxBx"]
      $aPatternSearch = ["#"]
  End Select 
  $sPattern = $aPattern[0]
  
  $hMenu = New Menu(hMenuButton.Window, True) As "Menu"
  $hMenu.Name = "mnuInsertColor"
  hMenu = New Menu($hMenu)
  hMenuButton.Menu = $hMenu.Name
  
  $hObs = New Observer(hMenuButton) As "Button"
  
End

Private Sub GetEditor() As TextEditor
  
  Return $hModule.GetEditor()
  
End


Public Sub Menu_Show()
  
  Dim sText As String
  Dim iPos As Integer
  Dim sPattern As String
  Dim sColor As String
  Dim aColor As New String[]
  Dim hMenu As Menu
  Dim hImage As Image
  Dim aScan As String[]
  Dim I As Integer
  Dim iColor As Integer
  Dim hPattern As Image
  
  sText = GetEditor().Text
  
  For Each sPattern In $aPatternSearch
    iPos = 0
    Do
      iPos = InStr(sText, sPattern, iPos + 1)
      If iPos = 0 Then Break
      
      If sPattern Begins "rgb" Then
        
        If sPattern Begins "rgba(" Then
          aScan = Scan(Mid$(sText, iPos), sPattern & "*,*,*,*)*")
          If aScan.Count <> 5 Then Continue
        Else
          aScan = Scan(Mid$(sText, iPos), sPattern & "*,*,*)*")
          If aScan.Count <> 4 Then Continue
        Endif
        aScan.Pop()
        sColor = sPattern & aScan.Join() & ")"
        
      Else
        
        iPos += Len(sPattern)
        sColor = ""
        While IsHexa(Mid$(sText, iPos, 1)) And Len(sColor) < 6
          sColor &= Mid$(sText, iPos, 1)
          Inc iPos
        Wend
        If Len(sColor) = 0 Then Continue
        If IsLetter(Mid$(sText, iPos, 1)) Then Continue
        If Len(sColor) < 3 Then Continue
      
        'sColor = String$(6 - Len(sColor), "0") & sColor
        sColor = sPattern & sColor
        
      Endif
      
      iColor = GetColorFromString(sColor)
      GoSub ADD_COLOR
      If aColor.Count >= 100 Then Break
      
    Loop
  Next
  
  For Each iColor In [Color.Black, Color.White, Color.Gray]
    sColor = FormatColor(iColor, $sPattern)
    GoSub ADD_COLOR
  Next
  
  aColor.Sort
  
  For I = 0 To aColor.Max
    sColor = aColor[I] 
    sColor = Mid$(sColor, InStr(sColor, ":") + 1)
    aColor[I] = sColor
  Next

  $hMenu.Children.Clear
  
  hPattern = Image.Load("img/16/tile.png")
  hPattern.FillRect(0, 0, 16, 1, Color.Gray)
  hPattern.FillRect(0, 0, 1, 16, Color.Gray)
  hPattern.FillRect(0, 15, 16, 1, Color.Gray)
  hPattern.FillRect(15, 0, 1, 16, Color.Gray)
  
  For Each sColor In aColor
    hMenu = New Menu($hMenu) As "MenuColor"
    hMenu.Text = Replace(sColor, "&", "&&")
    hMenu.Tag = sColor
    hImage = hPattern.Copy()
    hImage.PaintRect(1, 1, hImage.W - 2, hImage.H - 2, GetColorFromString(sColor))
    hMenu.Picture = hImage.Picture
  Next
  
  Return
  
ADD_COLOR:

  With Color[iColor]
    If .Saturation = 0 Then
      sColor = "0000" & Hex$(.Value, 2) & Hex$(.Alpha, 2) & ":" & sColor
    Else
      sColor = Hex$(.Hue, 2) & Hex$(.Saturation, 2) & Hex$(.Value, 2) & Hex$(.Alpha, 2) & ":" & sColor
    Endif
  End With
  If Not aColor.Exist(sColor) Then aColor.Add(sColor)
  Return
  
End

Public Sub MenuColor_Click()
  
  With GetEditor()
    .Insert(Last.Tag)
    .SetFocus
  End With
  
End

Public Sub Button_Click()

  Dim hEditor As TextEditor
  Dim sColor As String
  Dim sLine As String
  Dim X As Integer
  Dim XD As Integer
  Dim sCar As String
  Dim XF As Integer
  Dim iLen As Integer
  
  hEditor = GetEditor()
  sLine = hEditor[hEditor.Line].Text
  iLen = hEditor[hEditor.Line].Length
  X = hEditor.Column
  
  XD = X
  While XD > 0
    sCar = String.Mid$(sLine, XD, 1)
    If Not IsHexa(sCar) Then Break
    Dec XD
  Wend
  
  XF = X
  While XF < iLen
    sCar = String.Mid$(sLine, XF + 1, 1)
    If Not IsHexa(sCar) Then Break
    Inc XF
  Wend
  
  If XF - XD = 6 Then
    sColor = "&H" & String.Mid$(sLine, XD + 1, XF - XD)
  Endif
  
  If FColorChooser.Insert(False, ("Insert color"), $aPattern, sColor) Then Return
  
  With GetEditor()
    .Insert(FColorChooser.Pattern)
    .SetFocus
  End With
  
End

Public Sub Insert()
  
  Button_Click
  
End

