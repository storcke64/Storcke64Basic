' Gambas class file

Private $hProjectItem As ProjectBox
Private $sLast As String
Private $bShowButton As Boolean
Private $bShowAnother As Boolean

Public Sub _new()
  
  $hProjectItem = New ProjectBox(panProjectItem)
  $hProjectItem.Highlight = False
  panProject.Reparent(dchProject.FileView.Parent)
  panProject.Hide
  
End

Public Sub Form_Open()
  
  $sLast = ""
  dchProject.Bookmarks = Project.GetBookmarks()
  dchProject.ShowFile = True
  dchProject_Change
  UpdateButtons
  'tabProject_Click

End


Public Sub GetSettings() As Variant[]
  
  Return [dchProject.Settings, splProject.Settings]
  
End

Public Sub SetSettings(Value As Variant[])
  
  Try dchProject.Settings = Value[0]
  Try splProject.Settings = Value[1]
  
End

Public Sub dchProject_Icon(Path As String)

  If Exist(Path &/ ".project") Then 
    dchProject.Icon = Project.GetIcon(Path)    
  Endif  

End

Private Sub UpdateButtons()

  If Not $bShowButton Or If Not $sLast Then
    btnOpen.Hide
    btnOpenAnother.Hide
  Else
    btnOpen.Show
    btnOpenAnother.Visible = $bShowAnother
  Endif

End

Public Sub dchProject_Change()

  Dim sPath As String
  Dim hProjectTree As CProjectTree
  
  sPath = Project.FindProjectPath(dchProject.Value)
  If sPath = $sLast Then Return
  
  If Not sPath Then
    
    $sLast = ""
    panProject.Hide
    dchProject.FileView.Show
    dchProject.ShowToolbar = True

  Else

    $sLast = sPath
    
    $hProjectItem.Path = sPath
    hProjectTree = New CProjectTree(sPath)
    hProjectTree.SetView(tvwProject)
    
    panProject.Show
    dchProject.FileView.Hide
    
    dchProject.ShowToolbar = False
    
  Endif
  
  UpdateButtons
  
End

Private Sub GetParent() As ProjectChooser

  Return Me.Parent

End

Public Sub dchProject_Activate()

  GetParent()._RaiseActivate

End

Public Sub GetPath() As String
  
  Return Project.FindProjectPath(dchProject.Value)
  
End

Public Sub SetPath(sPath As String)
  
  dchProject.Value = sPath
  
End

Public Sub GetBorder() As Boolean
  
  Return dchProject.Border
  
End

Public Sub SetBorder(Value As Boolean)

  dchProject.Border = Value

End

Public Sub GetShowButton() As Boolean
  
  Return $bShowButton
  
End

Public Sub SetShowButton(Value As Boolean)
  
  $bShowButton = Value
  UpdateButtons
  
End

Public Sub GetShowAnother() As Boolean
  
  Return $bShowAnother
  
End

Public Sub SetShowAnother(Value As Boolean)

  $bShowAnother = Value
  UpdateButtons
  
End

Public Sub btnOpen_Click()

  GetParent()._RaiseOpen($sLast, False)

End

Public Sub btnOpenAnother_Click()

  GetParent()._RaiseOpen($sLast, True)
  

End

Public Sub btnCancel_Click()

  GetParent()._RaiseCancel()

End

Public Sub Form_Arrange()

  If System.RightToLeft Then
    panOpen.Move(Desktop.Scale, Me.ClientH - panOpen.H - Desktop.Scale)
  Else
    panOpen.Move(Me.ClientW - panOpen.W - Desktop.Scale, Me.ClientH - panOpen.H - Desktop.Scale)
  Endif
  panOpen.Raise

End
