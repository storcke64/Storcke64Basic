' Gambas class file

Inherits WebControl

'Public Const _Properties As String = "*,Text"
'Public Const _DefaultEvent As String = "Click"

'Event Click

Property X As String
Property Y As String
Property Width, W As String
Property Height, H As String
Property Child As WebForm
Property Resizable As Boolean
Property Modal As Boolean
Property Maximized As Boolean

Property PopupControl As String
Property PopupTransient As Boolean
Property ParentControl As String

Private $sX As String
Private $sY As String
Private $sWidth As String
Private $sHeight As String
Private $iFormId As Integer
Private $bResizable As Boolean
Private $bModal As Boolean
Private $sPopupControl As String
Private $bPopupTransient As Boolean
Private $sParentControl As String
Private $sMinWidth As String
Private $sMinHeight As String
Private $bMaximized As Boolean

Public Sub IsPopup() As Boolean

  Return $sPopupControl

End

Public Sub _RenderStyleSheet()
  
  Dim sX As String
  Dim sY As String
  
  Me._StartStyleSheet
  
  Me._AddStyleSheet("display:flex;")
  Me._AddStyleSheet("flex-flow:column;")
  
  If Not IsPopup() Then
  
    If $sX And If $sY Then
      sX = $sX
      If IsNumber(sX) Then sX &= "px"
      sY = $sY
      If IsNumber(sY) Then sY &= "px"
      Me._AddStyleSheet("transform:translate(" & sX & "," & sY & ");")
    Else
  
    ' If $sX Then Me._AddStyleSheet("left:" & $sX & ";")
    ' If $sY Then Me._AddStyleSheet("top:" & $sY & ";")
    
      WebForm._AddJavascript("gw.window.center(" & JS(Me.Name) & ")")
    Endif
    
  Endif
  
  If $sWidth Then Me._AddStyleSheet("width:" & $sWidth & ";")
  If $sHeight Then Me._AddStyleSheet("height:" & $sHeight & ";")
  
  Me._EndStyleSheet
  
End

Private Sub GetTitle() As String

  Dim hForm As WebForm

  Try hForm = WebControl.FromId($iFormId)
  If hForm Then Return hForm.Title

End

Public Sub _Render()
  
  Dim sOpen As String
  
  If Not IsPopup() Then
  
    Print "<div class=\"gw-window-titlebar\" id=\""; Me.Name; "-titlebar\">"
    Print "<button class=\"gw-window-button gw-window-close-button\""; Me._GetUpdateJS("onclick", "#close"); ">";
    Print "<img src=\""; Html(Application.Root &/ "gw-close.png"); "\">";
    Print "</button>"
    Print "<div class=\"gw-window-title\">"; GetTitle(); "</div>"
    If $bResizable Then
      Print "<button class=\"gw-window-button gw-window-max-button\" onclick=\"gw.window.maximize("; JS(Me.Name); ");\">";
      Print "<img src=\""; Html(Application.Root &/ "gw-arrow-up.png"); "\">";
      Print "</button>"
    Endif
    Print "</div>"
    
  Endif
  
  Print "<div class=\"gw-window-contents\">"
  If $iFormId Then WebControl.FromId($iFormId)._Redraw()
  Print "</div>"
  
  If IsPopup() Then

    sOpen = "gw.window.popup(" & JS(Me.Name) & "," & JS($bResizable) & "," & JS($sPopupControl) & "," & JS($bPopupTransient)
    If $sMinWidth Then sOpen &= "," & JS($sMinWidth) & "," & JS($sMinHeight) 
    sOpen &= ")"
    
  Else
    
    sOpen = "gw.window.open(" & JS(Me.Name) & "," & JS($bResizable) & "," & JS($bModal)
    If $sMinWidth Then sOpen &= "," & JS($sMinWidth) & "," & JS($sMinHeight) 
    sOpen &= ")"
    
  Endif
  
  WebForm._AddJavascript(sOpen)
  
End


Private Function X_Read() As String

  Return $sX

End

Private Sub X_Write(Value As String)

  If $sX = Value Then Return
  $sX = Value
  If $sX And If IsDigit($sX) Then $sX &= "em"
  Me.Refresh

End

Private Function Y_Read() As String

  Return $sY

End

Private Sub Y_Write(Value As String)

  If $sY = Value Then Return
  $sY = Value
  If $sY And If IsDigit($sY) Then $sY &= "em"
  Me.Refresh

End

Private Function Width_Read() As String

  Return $sWidth 

End

Private Sub Width_Write(Value As String)

  If $sWidth = Value Then Return
  $sWidth = Value
  If $sWidth And If IsDigit($sWidth) Then $sWidth &= "em"
  Me.Refresh

End

Private Function Height_Read() As String

  Return $sHeight

End

Private Sub Height_Write(Value As String)

  If $sHeight = Value Then Return
  $sHeight = Value
  If $sHeight And If IsDigit($sHeight) Then $sHeight &= "em"
  Me.Refresh

End

Public Sub Move(X As String, Y As String, Optional Width As String, Height As String)
  
  X_Write(X)
  Y_Write(Y)
  If Not IsMissing(Width) Then Width_Write(Width)
  If Not IsMissing(Height) Then Height_Write(Height)
  
End

Public Sub Resize(Width As String, Height As String)
  
  Width_Write(Width)
  Height_Write(Height)
  
End

Public Sub _UpdateProperty(sProp As String, vValue As Variant)
  
  Dim hChild As WebForm
  
  If sProp = "#geometry" Then 

    If Not $sMinWidth Then    
      $sMinWidth = Left(vValue[2], -2)
      $sMinHeight = Left(vValue[3], -2)
    Endif
    
    Inc Me._NoRefresh
    Try Move(vValue[0], vValue[1], vValue[2], vValue[3])
    $bMaximized = vValue[4]
    Dec Me._NoRefresh
  
  Else If sProp = "#close" Then
    
    hChild = Child_Read()
    If hChild Then hChild.Close
    
  Endif
  
End

Private Function Child_Read() As WebForm

  If $iFormId Then Return WebControl.FromId($iFormId)

End

Private Sub Child_Write(Value As WebForm)

  If Value Then
    $iFormId = Value.Id
  Else
    $iFormId = 0
  Endif
  Me.Refresh

End

Private Function Resizable_Read() As Boolean

  Return $bResizable

End

Private Sub Resizable_Write(Value As Boolean)

  $bResizable = Value
  Me.Refresh

End

Public Sub Delete()

  Dim hChild As WebForm
  
  hChild = Child_Read()
  If hChild Then hChild.Delete
  Super.Delete()
  
End

Private Function Modal_Read() As Boolean

  Return $bModal

End

Private Sub Modal_Write(Value As Boolean)

  $bModal = Value
  Me.Refresh

End

Public Sub _RefreshReply() As Boolean
  
  If Super._RefreshReply() Then Return
  Child_Read()._RefreshReply()
  
End

Private Function PopupControl_Read() As String

  Return $sPopupControl

End

Private Sub PopupControl_Write(Value As String)

  $sPopupControl = Value
  If IsPopup() Then
    Me.Class = "gw-popup"
  Else
    Me.Class = ""
  Endif
  Me.Refresh

End

Public Sub Close()
  
  'If Not Me.Child.Persistent Then
    WebForm._AddJavascriptBefore("gw.window.close(" & JS(Me.Name) & ")")
  'Endif
  WebForm._AddJavascriptBefore("gw.window.refresh()")
  
  If IsPopup() Then WebControl.FromName($sPopupControl).SetFocus
  'If $sParentControl Then Object.Raise(WebControl.FromName($sParentControl), "Dialog", [Child_Read(), vReturnValue])
  'If $iParentControlId Then WebForm._AddReply("gw.raise(" & JS(WebControl.FromId($iParentControlId).Name) & ",);")
  
End

Private Function ParentControl_Read() As String

  Return $sParentControl

End

Private Sub ParentControl_Write(Value As String)

  $sParentControl = Value

End

Public Sub _CancelChildrenRefresh()

  Dim hChild As WebForm
  
  hChild = Child_Read()
  If hChild Then hChild._CancelRefresh()
  
End

Private Function Maximized_Read() As Boolean

  Return $bMaximized

End

Private Sub Maximized_Write(Value As Boolean)

  If $bMaximized = Value Then Return
  $bMaximized = Value
  If Me._CanRefresh() Then WebForm._AddJavascript("gw.window.maximize(" & JS(Me.Name) & ")")

End

Private Function PopupTransient_Read() As Boolean

  Return $bPopupTransient

End

Private Sub PopupTransient_Write(Value As Boolean)

  $bPopupTransient = Value

End
