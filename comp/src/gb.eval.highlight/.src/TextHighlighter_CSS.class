' Gambas class file

Inherits TextHighlighter

Public Const Name As String = "css"
Public Const FullName As String = "CSS"
Public Const _Styles As String = "Keyword,Class,Id,Element,String,Number,Property,Pseudo,Rule,Important"

Static Private $cProp As New Collection
Static Private $aKeywords As String[]


Static Public Sub _init()
  
  Dim sProp As String
  Dim iPos As Integer
  
  $aKeywords = New String[]
  
  For Each sProp In Split(File.Load("css/properties"), ", \n", "", True)
    iPos = InStr(sProp, " ")
    If iPos Then sProp = Left(sProp, iPos - 1)
    $cProp[sProp] = True
    $aKeywords.Add(sProp)
  Next
  
  For Each sProp In Split(File.Load("css/values"), ", \n", "", True)
    sProp = Trim(sProp)
    $aKeywords.Add(sProp)
  Next
  
End

Public Sub GetKeywords() As String[]
  
  Return $aKeywords
  
End


' Private Sub AnalyzeCode(sText As String) As String
'   
'   Dim iInd As Integer
'   Dim iPos As Integer
'   Dim iLen As Integer
'   
'   If Not sText Then Return
'   
'   Highlight.Analyze(sText, True)
'   
'   iPos = 0
'   For iInd = 0 To Highlight.Symbols.Max
'     
'     If iPos < Highlight.Positions[iInd] Then 
'       Highlight.Add(Highlight.Normal, Highlight.Positions[iInd] - iPos)
'       iPos = Highlight.Positions[iInd]
'     Endif
'     
'     iLen = String.Len(Highlight.Symbols[iInd])
'     Highlight.Add(Highlight.Types[iInd], iLen)
'     iPos += iLen
'     
'   Next
' 
'   If iPos < String.Len(Highlight.TextAfter) Then 
'     Highlight.Add(Highlight.Normal, String.Len(Highlight.TextAfter) - iPos)
'   Endif
'   
'   Return Highlight.TextAfter
' 
' End

Public Sub Run(sText As String)

  Dim iState As Short
  Dim iNextState As Short
  Dim iInd As Integer
  Dim sOrgText As String
  Dim sCar As String
  Dim bLimit As Boolean
  Dim iTag As Short
  Dim sProperty As String
  Dim sWait As String
  Dim iSaveState As Short
  Dim iPos, iPos2 As Integer
  Dim bEscape As Boolean
  Dim N As Integer

  iState = TextHighlighter.State
  If iState = State.Normal Then iState = State.Keyword
  iTag = TextHighlighter.Tag
  sOrgText = sText
  iNextState = iState

  For iInd = 1 To String.Len(sText)

    iNextState = iState
    sCar = String.Mid$(sText, iInd, 1)
    
    If bEscape Then
      
      If IsHexa(sCar) And If N < 6 Then
        Inc N
        Goto NEXT_STATE
      Else 
        bEscape = False
        Goto NEXT_STATE
      Endif
      
    Endif
    
    If sCar = "\\" Then
      bEscape = True
      N = 0
      Goto NEXT_STATE
    Endif
    
    Select Case iState
    
      Case State.String
        If sCar = sWait Then iNextState = iSaveState
        Goto NEXT_STATE

      Case State.Comment
        If sCar = "/" And If iInd > 1 And If String.Mid$(sText, iInd - 1, 1) = "*" Then
          iNextState = iTag
        Endif
        Goto NEXT_STATE
      
      Case State.Rule
        If sCar = "{" Then 
          iState = State.Keyword
          iNextState = State.Keyword
          bLimit = True
        Endif
        Goto NEXT_STATE
        
      Case Else
        
        If sCar = "/" And If Mid$(sText, iInd, 2) = "/*" Then 
          iTag = iState
          iState = State.Comment
          iNextState = iState
          Goto NEXT_STATE
        Else If TextHighlighter_Html.AllowCode And If sCar = "<" And If Mid$(sText, iInd, 2) = "<%" Then
          TextHighlighter_Html.MeetCodeAt = iInd
          Break
        Endif
        
    End Select

    Select Case iState
    
      Case State.Keyword, State.Class, State.Id, State.Pseudo, State.Element
        
        If sCar = "." Then 
          
          iState = State.Class
          iNextState = iState
          
        Else If sCar = "#" Then 
          
          iState = State.Id
          iNextState = iState
          
        Else If IsLetter(sCar) Then
          
          If iState = State.Keyword Then
            iState = State.Element
            iNextState = iState
          Endif
          
        Else If InStr("():", sCar) Then
          
          iState = State.Pseudo
          iNextState = iState
          
        Else If IsSpace(sCar) Then 
          
          iState = State.Keyword
          iNextState = iState
          
        Else If sCar = "{" Then 
          
          iState = State.Keyword
          iNextState = State.Property
          iTag = State.Property
          bLimit = True
          
        Else If sCar = "@" Then
          
          iState = State.Rule
          iNextState = iState
          bLimit = True
          
        Endif
        
      Case State.Property
        
        If sCar = "." Then 
          
          iState = State.Class
          iNextState = iState
          
        Else If InStr(":()", sCar) Then
          
          iState = State.Keyword
          iNextState = State.Number
          
        Else If sCar = "}" Then 
          
          iState = State.Keyword
          iNextState = State.Keyword
          iTag = State.Keyword
          
        Else If IsSpace(sCar) Then
          
          iState = State.Property
          iNextState = iState
          
        Else
        
          sProperty = String.Mid$(sText, iInd)
          
          iPos = String.InStr(sProperty, ":")
          iPos2 = String.InStr(sProperty, "/*")
          
          If iPos = 0 Then iPos = String.Len(sProperty)
          If iPos2 = 0 Then iPos2 = String.Len(sProperty)
          iPos = Min(iPos, iPos2)
        
          Dec iPos
          sProperty = String.Left$(sProperty, iPos)
          
          If Not sProperty Then Goto NEXT_STATE
          
          If sProperty Then
            If $cProp.Exist(sProperty) Then
              TextHighlighter.Add(State.Property, iPos)
            Else If sProperty Begins "-" And If sProperty Like "-*-*" Then
              TextHighlighter.Add(State.Property, iPos)
            Else
              TextHighlighter.Add(State.Error, iPos)
            Endif
          Else
            TextHighlighter.Add(State.Property, iPos)
          Endif
          iInd += iPos - 1
          Continue
          
        Endif
        
      Case State.Number, State.Important
        
        If sCar = Chr$(34) Or If sCar = "'" Then
          
          iSaveState = iState
          sWait = sCar
          iState = State.String
          iNextState = iState
          
        Else If sCar = ";" Then 
          
          iState = State.Keyword
          iNextState = State.Property
          
        Else If sCar = "}" Then 
          
          iState = State.Keyword
          iNextState = State.Keyword
          iTag = State.Keyword
          
        Else If sCar = "!" Then
          
          iState = State.Important
          iNextState = iState
          
        Endif
        
      Case State.Rule
        
        If Not IsHexa(sCar) Then
          iState = State.Number
          iNextState = iState
          Dec iInd
          Continue
        Endif
                    
    End Select
  
  NEXT_STATE:
  
    TextHighlighter.Add(iState)
    iState = iNextState

  Next
  
  If iNextState = State.String Then iNextState = iSaveState
  
  TextHighlighter.State = iNextState
  TextHighlighter.Tag = iTag
  TextHighlighter.Limit = bLimit

End
